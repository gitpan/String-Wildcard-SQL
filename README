NAME
    String::Wildcard::SQL - SQL wildcard string routines

VERSION
    This document describes version 0.01 of String::Wildcard::SQL (from Perl
    distribution String-Wildcard-SQL), released on 2014-07-26.

SYNOPSIS
        use String::Wildcard::SQL qw(contains_wildcard);

        say 1 if contains_wildcard(""));      # -> 0
        say 1 if contains_wildcard("ab%"));   # -> 1
        say 1 if contains_wildcard("ab\\%")); # -> 0

DESCRIPTION
FUNCTIONS
  contains_wildcard($str[, $variant]) => bool
    Return true if $str contains wildcard pattern. Wildcard patterns include
    "%" (meaning zero or more characters) and "_" (exactly one character).

TODO
    Support other variants. Transact-SQL supports character class, though
    I'm not sure how the escaping mechanism works. Access supports DOS-style
    wildcard ("*" and "?") instead, and I'm also not sure whether there's
    something akin to backslash escape mechanism there.

    See String::Wildcard::Bash's TODO for the types of functions which I
    plan to add to this module.

SEE ALSO
    Regexp::Wildcards to convert a string with wildcard pattern to
    equivalent regexp pattern. Can handle Unix wildcards as well as SQL and
    DOS/Win32.

    Other "String::Wildcard::*" modules.

HOMEPAGE
    Please visit the project's homepage at
    <https://metacpan.org/release/String-Wildcard-SQL>.

SOURCE
    Source repository is at
    <https://github.com/sharyanto/perl-String-Wildcard-SQL>.

BUGS
    Please report any bugs or feature requests on the bugtracker website
    <https://rt.cpan.org/Public/Dist/Display.html?Name=String-Wildcard-SQL>

    When submitting a bug or request, please include a test-file or a patch
    to an existing test-file that illustrates the bug or desired feature.

AUTHOR
    Steven Haryanto <stevenharyanto@gmail.com>

COPYRIGHT AND LICENSE
    This software is copyright (c) 2014 by Steven Haryanto.

    This is free software; you can redistribute it and/or modify it under
    the same terms as the Perl 5 programming language system itself.

